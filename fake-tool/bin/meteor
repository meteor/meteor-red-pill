#!/bin/bash
set -e
set -u
set -o pipefail

# Do we already have packaging installed?  We can just exec it directly.
# (This is probably being invoked via SpringboardToLatestRelease.)
if [ -L "$HOME/.meteor/meteor" -a "$(readlink "$HOME/.meteor/meteor")" != "tools/latest/bin/meteor" ]; then
  # Also delete the release file that told us about this, so that
  # the new code doesn't springboard us back to it.
  if [ -n "${METEOR_SPRINGBOARD_RELEASE:-}" ]; then
    rm -f "$HOME/.meteor/releases/${METEOR_SPRINGBOARD_RELEASE}.release.json"
  fi
  exec "$HOME/.meteor/meteor" "$@"
fi

echo ""
echo "*********************************************************************"
echo "Exciting news! The Meteor package system has gotten a major upgrade."
echo ""
echo "The Meteor package system is now fully integrated into Meteor"
echo "(you no longer need to install Meteorite) and officially supported by"
echo "the Meteor core team."
echo ""
echo "Your Meteor install will now be updated to the new system. This may"
echo "take a few minutes. You may see some unusual or surprising messages"
echo "as it happens. That is normal and will only happen this one time."
echo "*********************************************************************"
echo ""

INSTALL_SCRIPT_URL="https://packages.meteor.com/install.sh"

curl -s --fail "$INSTALL_SCRIPT_URL" | sh

exec meteor "$@"
